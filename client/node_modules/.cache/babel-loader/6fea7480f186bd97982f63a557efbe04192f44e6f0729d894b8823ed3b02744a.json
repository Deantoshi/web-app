{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[message,setMessage]=useState('');useEffect(()=>{axios.get('http://localhost:5000/api/data').then(response=>{setMessage(response.data.message);}).catch(error=>{console.error('Error fetching data: ',error);});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"React + Flask App\"}),/*#__PURE__*/_jsx(\"p\",{children:message})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","message","setMessage","get","then","response","data","catch","error","console","className","children"],"sources":["/home/ddean/conclave-api/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data')\n      .then(response => {\n        setMessage(response.data.message);\n      })\n      .catch(error => {\n        console.error('Error fetching data: ', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React + Flask App</h1>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACdC,KAAK,CAACQ,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,QAAQ,EAAI,CAChBH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAACL,OAAO,CAAC,CACnC,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,KAAA,QAAKW,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBd,IAAA,OAAAc,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1Bd,IAAA,MAAAc,QAAA,CAAIV,OAAO,CAAI,CAAC,EACb,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}